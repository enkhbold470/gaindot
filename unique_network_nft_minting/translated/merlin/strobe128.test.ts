import {describe, test, expect} from 'vitest'
import {Strobe128} from './strobe128'
import {b} from '../templateLiteralFunctions'

const stateAfterInit = {
  state: Uint8Array.from([156, 127, 85, 224, 150, 155, 58, 168, 71, 198, 82, 64, 48, 69, 97, 6, 175, 120, 103, 12, 39, 122, 82, 153, 16, 84, 134, 34, 241, 108, 181, 124, 211, 31, 104, 46, 102, 14, 233, 18, 130, 74, 119, 34, 1, 238, 19, 148, 34, 111, 74, 252, 182, 45, 51, 18, 147, 204, 146, 232, 166, 36, 172, 246, 225, 182, 0, 149, 227, 34, 187, 251, 200, 69, 229, 178, 105, 149, 254, 125, 124, 132, 19, 116, 209, 255, 88, 152, 201, 46, 224, 99, 107, 6, 114, 115, 33, 201, 42, 96, 57, 7, 3, 83, 73, 204, 187, 27, 146, 183, 176, 5, 126, 143, 168, 127, 206, 188, 126, 136, 101, 111, 203, 69, 174, 4, 188, 52, 202, 190, 174, 190, 121, 217, 23, 80, 192, 232, 191, 19, 185, 102, 80, 77, 19, 67, 89, 114, 101, 221, 136, 101, 173, 249, 20, 9, 204, 155, 32, 213, 244, 116, 68, 4, 31, 151, 182, 153, 221, 251, 222, 233, 30, 168, 123, 208, 155, 248, 176, 45, 167, 90, 150, 233, 71, 240, 127, 91, 101, 187, 78, 110, 254, 250, 161, 106, 191, 217, 251, 246]),
  pos: 27,
  pos_begin: 1,
  cur_flags: 18,
}

const stateAfterAd = {
  state: Uint8Array.from([142, 132, 248, 4, 58, 108, 77, 23, 106, 181, 221, 174, 21, 116, 111, 174, 63, 6, 239, 30, 123, 124, 253, 166, 131, 136, 181, 242, 249, 200, 45, 25, 178, 232, 232, 238, 93, 168, 56, 155, 100, 98, 205, 42, 236, 177, 190, 180, 123, 150, 46, 152, 86, 231, 251, 28, 71, 8, 240, 110, 93, 253, 118, 127, 45, 145, 79, 139, 205, 114, 131, 1, 89, 227, 87, 91, 233, 197, 147, 71, 103, 247, 215, 105, 251, 9, 200, 76, 122, 116, 24, 92, 125, 159, 145, 233, 30, 222, 162, 125, 108, 48, 148, 192, 127, 21, 199, 222, 85, 58, 48, 153, 16, 13, 71, 1, 226, 28, 55, 84, 85, 139, 136, 108, 15, 17, 74, 164, 184, 186, 95, 42, 92, 187, 61, 44, 49, 163, 174, 111, 36, 118, 161, 209, 151, 41, 125, 84, 225, 113, 163, 214, 52, 250, 94, 148, 187, 23, 38, 119, 158, 246, 56, 239, 229, 194, 212, 31, 164, 6, 67, 154, 55, 200, 67, 180, 84, 45, 106, 227, 228, 48, 255, 37, 7, 50, 130, 141, 174, 28, 126, 179, 150, 158, 212, 170, 26, 189, 89, 218]),
  pos: 62,
  pos_begin: 0,
  cur_flags: 2,
}

const stateAfterPrf = {
  state: Uint8Array.from([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 116, 140, 196, 220, 232, 13, 91, 138, 154, 72, 88, 28, 105, 143, 218, 203, 48, 179, 221, 187, 211, 128, 12, 225, 22, 109, 78, 239, 132, 12, 213, 209, 222, 198, 35, 254, 82, 247, 167, 5, 133, 155, 192, 99, 9, 84, 11, 90, 16, 136, 174, 207, 74, 82, 218, 17, 235, 80, 193, 72, 54, 215, 66, 130, 156, 136, 33, 143, 15, 202, 239, 230, 157, 70, 246, 238, 208, 228, 134, 230, 213, 68, 200, 251, 26, 87, 155, 247, 7, 26, 52, 157, 115, 112, 139, 41, 195, 239, 104, 195, 66, 172, 13, 102, 202, 29, 78, 102, 56, 191, 247, 155, 20, 58, 17, 223, 151, 197, 12, 224, 140, 147, 196, 165, 100, 47, 144, 255, 8, 138, 201, 228, 178, 16, 231, 110, 145, 46, 26, 21, 195, 243, 62, 126, 187, 42, 8, 109, 236, 216, 96, 80, 112, 141, 227, 150, 1, 235, 35, 214, 88, 215, 119, 214, 97, 96, 124]),
  pos: 32,
  pos_begin: 0,
  cur_flags: 7,
}

const stateAfterPrfKey = {
  state: Uint8Array.from([180, 142, 100, 92, 161, 124, 102, 127, 213, 32, 107, 165, 122, 106, 34, 141, 114, 216, 225, 144, 56, 20, 211, 241, 127, 98, 41, 150, 215, 207, 239, 176, 1, 13, 48, 121, 227, 97, 171, 252, 235, 105, 225, 59, 39, 251, 231, 170, 199, 158, 143, 20, 106, 239, 16, 246, 215, 74, 85, 167, 226, 120, 96, 79, 168, 234, 169, 101, 96, 229, 246, 216, 17, 97, 208, 0, 210, 51, 59, 150, 228, 146, 69, 10, 54, 13, 172, 132, 18, 97, 95, 28, 140, 110, 69, 60, 158, 92, 154, 164, 70, 0, 207, 93, 184, 128, 208, 192, 33, 92, 135, 240, 62, 163, 108, 1, 22, 115, 240, 6, 121, 195, 187, 138, 26, 230, 94, 171, 28, 229, 19, 101, 24, 226, 202, 254, 161, 251, 135, 218, 158, 140, 235, 41, 61, 253, 44, 11, 198, 80, 225, 253, 240, 59, 240, 23, 54, 82, 18, 121, 170, 158, 14, 129, 239, 164, 245, 208, 160, 127, 29, 121, 248, 180, 159, 54, 82, 26, 19, 78, 253, 110, 18, 240, 84, 195, 163, 146, 140, 189, 8, 30, 169, 16, 197, 130, 181, 173, 125, 40]),
  pos: 32,
  pos_begin: 0,
  cur_flags: 6,
}

const prfTestSequence = Uint8Array.from([7, 228, 92, 206, 128, 120, 206, 226, 89, 227, 227, 117, 187, 133, 215, 86, 16, 226, 209, 225, 32, 28, 95, 100, 80, 69, 161, 148, 237, 212, 159, 248])

describe('Strobe128', () => {
  test('conformance', () => {
    const s1 = new Strobe128(b`Conformance Test Protocol`)

    expect(s1.cloneState()).toEqual(stateAfterInit)

    // meta-AD(b"msg"); AD(msg)
    s1.meta_ad(b`ms`, false)
    s1.meta_ad(b`g`, true)
    const msg = new Uint8Array(1024).fill(99)
    s1.ad(msg, false)

    expect(s1.cloneState()).toEqual(stateAfterAd)

    // meta-AD(b"prf"); PRF()
    const prf1 = new Uint8Array(32)
    s1.meta_ad(b`prf`, false)
    s1.prf(prf1, false)

    expect(s1.cloneState()).toEqual(stateAfterPrf)

    // meta-AD(b"key"); KEY(prf output)
    s1.meta_ad(b`key`, false)
    s1.key(prf1, false)

    expect(s1.cloneState()).toEqual(stateAfterPrfKey)

    // meta-AD(b"prf"); PRF()
    const prf1_2 = new Uint8Array(32)
    s1.meta_ad(b`prf`, false)
    s1.prf(prf1_2, false)

    expect(prf1_2).toEqual(prfTestSequence)
  })
})
